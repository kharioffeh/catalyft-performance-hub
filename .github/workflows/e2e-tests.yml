name: E2E Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch: # Allow manual triggering

jobs:
  # iOS Testing on macOS runners
  e2e-ios:
    runs-on: macos-13
    timeout-minutes: 60
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Setup Expo CLI
        run: npm install -g @expo/cli

      - name: Install dependencies
        working-directory: mobile
        run: npm install --legacy-peer-deps

      - name: Validate E2E setup
        working-directory: mobile
        run: npm run detox:validate

      - name: Setup iOS Simulator
        run: |
          # List available simulators
          xcrun simctl list devices available
          
          # Try to boot iPhone 15 first, then iPhone 14 as fallback
          xcrun simctl boot "iPhone 15" || xcrun simctl boot "iPhone 14" || echo "Simulator boot failed, continuing anyway"
          
          # Wait for simulator to be ready
          sleep 10

      - name: Install Expo development build tools
        working-directory: mobile
        run: |
          # Install required expo packages for native builds using legacy peer deps
          npm install expo-dev-client @expo/metro-config --legacy-peer-deps
        env:
          NPM_CONFIG_LEGACY_PEER_DEPS: true

      - name: Pre-build for iOS (generate native code)
        working-directory: mobile
        run: |
          # Generate native iOS project
          npx expo prebuild --platform ios --clear
        env:
          EXPO_NO_TELEMETRY: 1
          NPM_CONFIG_LEGACY_PEER_DEPS: true

      - name: Build iOS app for testing
        working-directory: mobile
        run: |
          # Build using xcodebuild instead of expo run:ios
          cd ios
          xcodebuild -workspace *.xcworkspace -scheme * -configuration Debug -sdk iphonesimulator -derivedDataPath build
        env:
          EXPO_NO_METRO: 1

      - name: Run iOS E2E tests
        working-directory: mobile
        run: |
          # Run the tests with retries
          npm run detox:test:ios || npm run detox:test:ios
        env:
          DETOX_LOGLEVEL: info

      - name: Upload iOS test artifacts
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: ios-e2e-artifacts
          path: |
            mobile/artifacts/
            mobile/e2e/screenshots/
          retention-days: 7

  # Android Testing on Ubuntu runners
  e2e-android:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3
        with:
          packages: |
            tools
            platform-tools
            emulator
            system-images;android-33;google_apis;x86_64
            platforms;android-33
            build-tools;33.0.0

      - name: Setup Expo CLI
        run: npm install -g @expo/cli

      - name: Install dependencies
        working-directory: mobile
        run: npm install --legacy-peer-deps

      - name: Validate E2E setup
        working-directory: mobile
        run: npm run detox:validate

      - name: Enable KVM (for Android emulator)
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm

      - name: Setup Android Emulator
        run: |
          # Ensure Android SDK tools are in PATH
          echo "$ANDROID_HOME/emulator" >> $GITHUB_PATH
          echo "$ANDROID_HOME/tools" >> $GITHUB_PATH
          echo "$ANDROID_HOME/platform-tools" >> $GITHUB_PATH
          
          # Create AVD with Android 33 (more stable in CI)
          echo "no" | $ANDROID_HOME/cmdline-tools/latest/bin/avdmanager create avd -n test_emulator -k "system-images;android-33;google_apis;x86_64" --force
          
          # Start emulator in background
          $ANDROID_HOME/emulator/emulator -avd test_emulator -no-audio -no-window -gpu swiftshader_indirect -no-snapshot -wipe-data &
          
          # Wait for emulator to boot (with timeout)
          timeout 300 adb wait-for-device shell 'while [[ -z $(getprop sys.boot_completed | tr -d '\r') ]]; do sleep 1; done; input keyevent 82'

      - name: Install Expo development build tools
        working-directory: mobile
        run: |
          # Install required expo packages for native builds using legacy peer deps
          npm install expo-dev-client @expo/metro-config --legacy-peer-deps
        env:
          NPM_CONFIG_LEGACY_PEER_DEPS: true

      - name: Pre-build for Android (generate native code)
        working-directory: mobile
        run: |
          # Generate native Android project
          npx expo prebuild --platform android --clear
        env:
          EXPO_NO_TELEMETRY: 1
          NPM_CONFIG_LEGACY_PEER_DEPS: true

      - name: Build Android app for testing
        working-directory: mobile
        run: |
          # Build using gradlew instead of expo run:android
          cd android
          chmod +x gradlew
          ./gradlew assembleDebug
        env:
          EXPO_NO_METRO: 1

      - name: Run Android E2E tests
        working-directory: mobile
        run: |
          # Run the tests with retries
          npm run detox:test:android || npm run detox:test:android
        env:
          DETOX_LOGLEVEL: info

      - name: Upload Android test artifacts
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: android-e2e-artifacts
          path: |
            mobile/artifacts/
            mobile/e2e/screenshots/
          retention-days: 7

  # Test Results Summary
  test-summary:
    runs-on: ubuntu-latest
    needs: [e2e-ios, e2e-android]
    if: always()
    
    steps:
      - name: Test Results Summary
        run: |
          echo "## E2E Test Results 🧪" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [ "${{ needs.e2e-ios.result }}" == "success" ]; then
            echo "✅ **iOS Tests**: Passed" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ **iOS Tests**: Failed" >> $GITHUB_STEP_SUMMARY
          fi
          
          if [ "${{ needs.e2e-android.result }}" == "success" ]; then
            echo "✅ **Android Tests**: Passed" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ **Android Tests**: Failed" >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "View detailed results in the job logs above." >> $GITHUB_STEP_SUMMARY

name: Environment Health Check

on:
  pull_request:
    types: [opened, reopened, synchronize]  # only run on PRs
  
  # Add manual trigger in case we want to debug from the Actions tab
  workflow_dispatch: {}

# Add permissions for the GITHUB_TOKEN
permissions:
  contents: read
  issues: write
  pull-requests: write

jobs:
  health-check:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Node 20
      uses: actions/setup-node@v4
      with:
        node-version: 20
        cache: npm
        
    - name: Install dependencies
      run: npm ci --legacy-peer-deps
      
    - name: Run health check
      id: health_check
      env:
        VITE_SUPABASE_URL: ${{ secrets.VITE_SUPABASE_URL }}
        VITE_SUPABASE_ANON_KEY: ${{ secrets.VITE_SUPABASE_ANON_KEY }}
        OPENAI_API_KEY: ${{ secrets.OPENAI_KAI_KEY }}
        OPENAI_ARIA_KEY: ${{ secrets.OPENAI_ARIA_KEY }}
        ABLY_API_KEY: ${{ secrets.ABLY_API_KEY }}
      run: node scripts/health-check.js
      continue-on-error: true
      
    - name: Build project
      if: success()
      run: npm run build
      
    - name: Deploy edge functions (smoke test)
      if: success()
      env:
        SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
      run: |
        npm install -g supabase --legacy-peer-deps
        supabase functions deploy --verify-jwt=false --project-ref=xeugyryfvilanoiethum
      continue-on-error: true
      
    # Use a more reliable notification approach that works around permission issues
    - name: Notify on failure via pull request review
      if: failure() && github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          try {
            // Try to create a pull request review comment first
            await github.rest.pulls.createReview({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number,
              body: 'ðŸš¨ **Health check failed!** Please check the [workflow logs](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}) for more details.',
              event: 'COMMENT'
            });
          } catch (reviewError) {
            console.log('Failed to create PR review:', reviewError.message);
            try {
              // Fallback to issue comment if review fails
              await github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: 'ðŸš¨ **Health check failed!** Please check the [workflow logs](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}) for more details.'
              });
            } catch (commentError) {
              console.log('Failed to create issue comment:', commentError.message);
              // Final fallback - just log the failure
              console.log('ðŸš¨ Health check failed! Check the workflow logs for details.');
              core.setFailed('Health check failed - see logs for details');
            }
          }
      
    # Alternative notification using workflow summary (always works)
    - name: Create workflow summary
      if: failure()
      run: |
        echo "## ðŸš¨ Health Check Failed" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "The health check workflow has failed. Please review the logs above for specific error details." >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Common Issues:" >> $GITHUB_STEP_SUMMARY
        echo "- Environment variables not properly configured" >> $GITHUB_STEP_SUMMARY
        echo "- Supabase edge functions not deployed" >> $GITHUB_STEP_SUMMARY
        echo "- Network connectivity issues" >> $GITHUB_STEP_SUMMARY
        echo "- API key permissions" >> $GITHUB_STEP_SUMMARY
      


// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
  repositories {
    google()
    mavenCentral()
  }
  dependencies {
    classpath('com.android.tools.build:gradle')
    classpath('com.facebook.react:react-native-gradle-plugin')
    classpath('org.jetbrains.kotlin:kotlin-gradle-plugin')
  }
}

def reactNativeAndroidDir = new File(
  providers.exec {
    workingDir(rootDir)
    commandLine("node", "--print", "require.resolve('react-native/package.json')")
  }.standardOutput.asText.get().trim(),
  "../android"
)

allprojects {
  repositories {
    maven {
      // All of React Native (JS, Obj-C sources, Android binaries) is installed from npm
      url(reactNativeAndroidDir)
    }

    google()
    mavenCentral()
    maven { url 'https://www.jitpack.io' }
  }
}

apply plugin: "expo-root-project"
apply plugin: "com.facebook.react.rootproject"

subprojects {
  afterEvaluate { project ->
    if (project.hasProperty('android')) {
      project.android {
        packaging {
          resources {
            excludes += [
              'META-INF/LICENSE','META-INF/LICENSE.md','META-INF/LICENSE.txt',
              'META-INF/NOTICE','META-INF/NOTICE.md','META-INF/NOTICE.txt',
              'META-INF/DEPENDENCIES','META-INF/AL2.0','META-INF/LGPL2.1'
            ]
            // If some libs insist, pickFirst keeps build moving:
            pickFirsts += [
                    "META-INF/LICENSE",
                    "META-INF/LICENSE.txt",
                    "META-INF/LICENSE.md",
                    "META-INF/NOTICE",
                    "META-INF/NOTICE.txt"
            ]
          }
        }
        testOptions {
          packaging {
            resources {
              excludes += [
                'META-INF/LICENSE','META-INF/LICENSE.md','META-INF/LICENSE.txt',
                'META-INF/NOTICE','META-INF/NOTICE.md','META-INF/NOTICE.txt',
                'META-INF/DEPENDENCIES','META-INF/AL2.0','META-INF/LGPL2.1'
              ]
              // Also use pickFirsts for test resources to handle duplicates
              pickFirsts += [
                'META-INF/LICENSE','META-INF/LICENSE.md','META-INF/LICENSE.txt',
                'META-INF/NOTICE','META-INF/NOTICE.md','META-INF/NOTICE.txt'
              ]
            }
          }
        }
      }
    }
  }
}

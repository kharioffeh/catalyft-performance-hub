
import React, { useState } from 'react';
import { useBlock, useDeleteBlock } from '@/hooks/useBlock';
import { GlassCard } from '@/components/ui/glass-card';
import { Button } from '@/components/ui/button';
import { ProgramBuilderModal } from '@/components/solo/ProgramBuilderModal';
import WeekTable from '@/components/WeekTable';
import { Activity, Calendar, Trash2, Sparkles } from 'lucide-react';
import { AlertDialog, AlertDialogAction, AlertDialogCancel, AlertDialogContent, AlertDialogDescription, AlertDialogFooter, AlertDialogHeader, AlertDialogTitle, AlertDialogTrigger } from '@/components/ui/alert-dialog';

const SoloProgramPage: React.FC = () => {
  const { data: block, isLoading } = useBlock();
  const deleteBlock = useDeleteBlock();
  const [showBuilderModal, setShowBuilderModal] = useState(false);

  if (isLoading) {
    return (
      <div className="min-h-screen bg-gradient-to-br from-slate-900 via-indigo-900 to-slate-900 p-4 md:p-8">
        <div className="max-w-7xl mx-auto">
          <div className="animate-pulse space-y-6">
            <div className="h-8 bg-white/20 rounded w-64"></div>
            <div className="h-64 bg-white/20 rounded"></div>
          </div>
        </div>
      </div>
    );
  }

  return (
    <div className="min-h-screen bg-gradient-to-br from-slate-900 via-indigo-900 to-slate-900 p-4 md:p-8">
      <div className="max-w-7xl mx-auto space-y-6">
        {/* Page Header */}
        <div className="flex items-center justify-between">
          <div>
            <h1 className="text-3xl font-bold text-white mb-2">Your Program</h1>
            <p className="text-white/70">AI-powered training program tailored for you</p>
          </div>
          
          {block && (
            <div className="flex items-center gap-3">
              <Button
                variant="outline"
                onClick={() => setShowBuilderModal(true)}
                className="text-white border-white/20 hover:bg-white/10"
              >
                <Sparkles className="w-4 h-4 mr-2" />
                New Program
              </Button>
              
              <AlertDialog>
                <AlertDialogTrigger asChild>
                  <Button variant="outline" size="icon" className="text-red-400 border-red-400/20 hover:bg-red-400/10">
                    <Trash2 className="w-4 h-4" />
                  </Button>
                </AlertDialogTrigger>
                <AlertDialogContent className="bg-slate-900/95 backdrop-blur-md border border-white/10">
                  <AlertDialogHeader>
                    <AlertDialogTitle className="text-white">Delete Program</AlertDialogTitle>
                    <AlertDialogDescription className="text-white/70">
                      Are you sure you want to delete your current training program? This action cannot be undone.
                    </AlertDialogDescription>
                  </AlertDialogHeader>
                  <AlertDialogFooter>
                    <AlertDialogCancel className="bg-white/10 text-white border-white/20 hover:bg-white/20">
                      Cancel
                    </AlertDialogCancel>
                    <AlertDialogAction
                      onClick={() => deleteBlock.mutate(block.id)}
                      className="bg-red-600 hover:bg-red-700 text-white"
                    >
                      Delete Program
                    </AlertDialogAction>
                  </AlertDialogFooter>
                </AlertDialogContent>
              </AlertDialog>
            </div>
          )}
        </div>

        {!block ? (
          // No Program State
          <GlassCard className="text-center py-20" accent="primary">
            <div className="max-w-md mx-auto space-y-6">
              <div className="w-20 h-20 bg-indigo-500/20 rounded-full flex items-center justify-center mx-auto">
                <Activity className="w-10 h-10 text-indigo-400" />
              </div>
              
              <div>
                <h2 className="text-2xl font-bold text-white mb-3">No Program Yet</h2>
                <p className="text-white/70 mb-6">
                  Get started with a personalized training program generated by ARIA, 
                  our AI coach, or build one manually.
                </p>
              </div>
              
              <Button
                onClick={() => setShowBuilderModal(true)}
                className="bg-indigo-600 hover:bg-indigo-700 text-white"
                size="lg"
              >
                <Sparkles className="w-5 h-5 mr-2" />
                Create Your Program
              </Button>
            </div>
          </GlassCard>
        ) : (
          // Active Program State
          <div className="space-y-6">
            {/* Program Info Card */}
            <GlassCard className="p-6" accent="primary">
              <div className="flex items-center justify-between mb-4">
                <div className="flex items-center gap-3">
                  <div className="p-2 bg-indigo-500/20 rounded-lg">
                    <Calendar className="w-5 h-5 text-indigo-400" />
                  </div>
                  <div>
                    <h3 className="text-lg font-semibold text-white">{block.name}</h3>
                    <p className="text-white/60 text-sm">
                      {block.duration_weeks} week{block.duration_weeks !== 1 ? 's' : ''} program
                    </p>
                  </div>
                </div>
                
                <div className="text-right">
                  <p className="text-white/60 text-sm">Created</p>
                  <p className="text-white text-sm">
                    {new Date(block.created_at).toLocaleDateString()}
                  </p>
                </div>
              </div>
            </GlassCard>

            {/* Program Content */}
            <GlassCard className="p-6">
              <WeekTable week={block.data} />
            </GlassCard>
          </div>
        )}

        {/* Program Builder Modal */}
        <ProgramBuilderModal
          open={showBuilderModal}
          onClose={() => setShowBuilderModal(false)}
        />
      </div>
    </div>
  );
};

export default SoloProgramPage;

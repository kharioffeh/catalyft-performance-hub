pluginManagement {
  def reactNativeGradlePlugin = new File(
    providers.exec {
      workingDir(rootDir.getParentFile().getAbsolutePath() + "/mobile")
      commandLine("node", "--print", "require.resolve('@react-native/gradle-plugin/package.json', { paths: [require.resolve('react-native/package.json')] })")
    }.standardOutput.asText.get().trim()
  ).getParentFile().absolutePath
  includeBuild(reactNativeGradlePlugin)
  
  // Expo plugins path - commented out as it may not exist in newer versions
  // def expoPluginsPath = new File(
  //   providers.exec {
  //     workingDir(rootDir.getParentFile().getAbsolutePath() + "/mobile")
  //     commandLine("node", "--print", "require.resolve('expo-modules-autolinking/package.json', { paths: [require.resolve('expo/package.json')] })")
  //   }.standardOutput.asText.get().trim(),
  //   "../android/expo-gradle-plugin"
  // ).absolutePath
  // includeBuild(expoPluginsPath)
}

plugins {
  id("com.facebook.react.settings")
  // id("expo-autolinking-settings") // Commented out as expo plugin may not be available
}

// Simplified autolinking configuration
// extensions.configure(com.facebook.react.ReactSettingsExtension) { ex ->
//   ex.autolinkLibrariesFromCommand()
// }

rootProject.name = 'vite_react_shadcn_ts'

include ':app'

// Define React Native Gradle plugin path
def reactNativeGradlePlugin = new File(
  providers.exec {
    workingDir(rootDir.getParentFile().getAbsolutePath() + "/mobile")
    commandLine("node", "--print", "require.resolve('@react-native/gradle-plugin/package.json', { paths: [require.resolve('react-native/package.json')] })")
  }.standardOutput.asText.get().trim()
).getParentFile().absolutePath

includeBuild(reactNativeGradlePlugin)
